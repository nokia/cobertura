<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <artifactId>cobertura</artifactId>
  <packaging>jar</packaging>
  <name>Cobertura Core Library</name>
  
  <parent>
    <groupId>net.sourceforge.cobertura</groupId>
    <artifactId>cobertura-reactor</artifactId>
    <version>2.1.2-SNAPSHOT</version>
  </parent>
  
  <description>
    Cobertura is a free Java tool that calculates the percentage of
    code accessed by tests. It can be used to identify which parts of
    your Java program are lacking test coverage. It is based on jcoverage.
  </description>
  
  <url>http://cobertura.sourceforge.net</url>
  
  <pluginRepositories>
    <pluginRepository>
      <id>sonatype-releases</id>
      <url>http://oss.sonatype.org/content/repositories/releases</url>
    </pluginRepository>
    <pluginRepository>
      <id>clojars.org</id>
      <url>http://clojars.org/repo</url>
    </pluginRepository>
  </pluginRepositories>

  <properties>
    <asmVersion>7.3.1</asmVersion>
    <xercesVersion>2.11.0</xercesVersion>
    <xalanVersion>2.7.1</xalanVersion>
    <oroVersion>2.0.8</oroVersion>
    <jaxenVersion>1.1.4</jaxenVersion>
    <commonsioVersion>2.2</commonsioVersion>
    <commonslangVersion>3.3.2</commonslangVersion>
    <antVersion>1.10.9</antVersion>
    <jettyVersion>6.1.14</jettyVersion>
    <simplexmlVersion>2.6.2</simplexmlVersion>
    <guavaVersion>13.0.1</guavaVersion>
    <groovyVersion>1.6.9</groovyVersion>
    <jsr305Version>1.3.2</jsr305Version>
    <javaccVersion>5.0</javaccVersion>
    <logbackVersion>1.0.13</logbackVersion>
    <junitVersion>4.11</junitVersion>
    <mockitoVersion>1.9.5</mockitoVersion>
    <jdkVersion>1.8</jdkVersion>
    <surefireVersion>3.0.0-M4</surefireVersion>
    <slf4jVersion>1.7.5</slf4jVersion>
    <jdomVersion>1.1.3</jdomVersion>
    <plugin.java.formatter.version>0.4</plugin.java.formatter.version>
    <plugin.mvn.compiler.version>2.3.2</plugin.mvn.compiler.version>
    <plugin.mvn.jar.version>2.3.2</plugin.mvn.jar.version>
    <plugin.pmd.version>3.6</plugin.pmd.version>
    <plugin.jdoc.version>2.9.1</plugin.jdoc.version>
    <plugin.findbugs.version>3.0.5</plugin.findbugs.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>com.sun</groupId>
      <artifactId>tools</artifactId>
      <version>0</version>
      <scope>system</scope>
      <systemPath>${toolsjar}</systemPath>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm</artifactId>
      <version>${asmVersion}</version>
    </dependency>
    <dependency>
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm-tree</artifactId>
      <version>${asmVersion}</version>
    </dependency>
    <dependency>
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm-commons</artifactId>
      <version>${asmVersion}</version>
    </dependency>
    <dependency>
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm-util</artifactId>
      <version>${asmVersion}</version>
    </dependency>
    <dependency>
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm-analysis</artifactId>
      <version>${asmVersion}</version>
    </dependency>
    <dependency>
      <groupId>oro</groupId>
      <artifactId>oro</artifactId>
      <version>${oroVersion}</version>
    </dependency>
    <dependency>
      <groupId>jaxen</groupId>
      <artifactId>jaxen</artifactId>
      <version>${jaxenVersion}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.ant</groupId>
      <artifactId>ant</artifactId>
      <version>${antVersion}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.ant</groupId>
      <artifactId>ant-junit</artifactId>
      <version>${antVersion}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.ant</groupId>
      <artifactId>ant-junit4</artifactId>
      <version>${antVersion}</version>
    </dependency>    
    <!-- Cobertura actually uses JUnit classes for report processing so scope is compile. -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jdom</groupId>
      <artifactId>jdom</artifactId>
      <version>${jdomVersion}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy-all</artifactId>
      <version>${groovyVersion}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>net.java.dev.javacc</groupId>
      <artifactId>javacc</artifactId>
      <version>${javaccVersion}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
    </dependency>
  </dependencies>

  <profiles>
      <profile>
          <id>jdk6minus</id>
          <activation>
              <jdk>(,1.6]</jdk>
          </activation>
          <build>
              <plugins>
                  <plugin>
                      <groupId>org.apache.maven.plugins</groupId>
                      <artifactId>maven-surefire-plugin</artifactId>
                      <version>${surefireVersion}</version>
                      <configuration>
                          <excludes combine.children="append">
                              <!-- These tests require JDK 7+ -->
                              <exclude>net/sourceforge/cobertura/jdk/JDK7Test.java</exclude>
                              <exclude>net/sourceforge/cobertura/test/FunctionalTest.java</exclude>
                              <exclude>net/sourceforge/cobertura/test/IgnoreMethodAnnotationFunctionalTest.java</exclude>
                              <exclude>net/sourceforge/cobertura/test/IgnoreTrivialFunctionalTest.java</exclude>
                              <exclude>net/sourceforge/cobertura/test/LargeFileTest.java</exclude>
                              <exclude>net/sourceforge/cobertura/test/PerformanceTest.java</exclude>
                              <exclude>net/sourceforge/cobertura/test/SwitchFunctionalTest.java</exclude>
                              <exclude>net/sourceforge/cobertura/thread/test/MultipleClassloaderFunctionalTest.java</exclude>
                          </excludes>
                          <skipTests>false</skipTests>
                          <testFailureIgnore>true</testFailureIgnore>
                          <forkMode>once</forkMode>
                      </configuration>
                  </plugin>
              </plugins>
          </build>
      </profile>
      <profile>
          <id>standardToolsJar-profile</id>
          <activation>
              <activeByDefault>true</activeByDefault>
              <file>
                  <exists>${java.home}/../lib/tools.jar</exists>
              </file>
          </activation>
          <properties>
              <toolsjar>${java.home}/../lib/tools.jar</toolsjar>
          </properties>
      </profile>
      <profile>
          <id>appleJdkToolsJar-profile</id>
          <activation>
              <activeByDefault>false</activeByDefault>
              <file>
                  <exists>${java.home}/../Classes/classes.jar</exists>
              </file>
          </activation>
          <properties>
              <toolsjar>${java.home}/../Classes/classes.jar</toolsjar>
          </properties>
      </profile>
  </profiles>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>2.5</version>
        <configuration>
          <filesets>
            <fileset>
              <directory>src/main/java/net/sourceforge/cobertura/javancss/parser</directory>
              <includes>
                <include>**/*</include>
              </includes>
              <followSymlinks>false</followSymlinks>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
      
      <!-- Cobertura requires custom jdk version for providing the support for the latest jdk. -->
      <plugin>
        <groupId>com.code54.mojo</groupId>
        <artifactId>buildversion-plugin</artifactId>
        <version>1.0.3</version>
        <executions>
          <execution>
            <goals>
              <goal>set-properties</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      
      <plugin>
        <groupId>com.helger.maven</groupId>
        <artifactId>ph-javacc-maven-plugin</artifactId>
        <version>4.1.3</version>
        <executions>
          <execution>
            <id>javacc</id>
            <phase>initialize</phase>
            <goals>
              <goal>javacc</goal>
            </goals>
            <configuration>
              <outputDirectory>src/main/java</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <fork>true</fork>
          <excludes>
            <exclude>**/test/*.java</exclude>
          </excludes>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <index />
            <manifest>
              <addDefaultImplementationEntries />
              <addDefaultSpecificationEntries />
            </manifest>
            <manifestEntries>
              <Specification-Title>A code coverage analysis tool.</Specification-Title>
              <Specification-Version>${project.version}</Specification-Version>
              <Specification-Vendor>Cobertura</Specification-Vendor>
              <Implementation-Title>A code coverage analysis tool.</Implementation-Title>
              <Implementation-Version>${project.version}</Implementation-Version>
              <Implementation-Vendor>Cobertura</Implementation-Vendor>
              <Implementation-Vendor-Id>${project.groupId}</Implementation-Vendor-Id>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <redirectTestOutputToFile>true</redirectTestOutputToFile>
          <excludes combine.children="append">
            <exclude>**/test/condition/**</exclude>
            <exclude>**/examples/functionaltest1/**</exclude>
            <!-- This test is failing and I don't know how to fix it -->
            <exclude>net/sourceforge/cobertura/thread/test/MultipleClassloaderFunctionalTest.java</exclude>
            <!-- This test fails on Windows, see https://github.com/cobertura/cobertura/pull/209 -->
            <exclude>net/sourceforge/cobertura/dsl/ArgumentsBuilderTest.java</exclude>

          </excludes>
          <skipTests>false</skipTests>
          <testFailureIgnore>true</testFailureIgnore>
          <forkMode>once</forkMode>
        </configuration>
      </plugin>
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </build>
  
</project>
